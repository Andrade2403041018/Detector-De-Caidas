# Configuraci√≥n del Sistema de Detecci√≥n de Ca√≠das
# ================================================

# Configuraci√≥n de la c√°mara
CAMARA_ID = 0  # 0 = c√°mara web principal

# Configuraci√≥n de detecci√≥n
UMBRAL_ANGULO = 45  # Grados para detectar ca√≠da
CONTADOR_CONFIRMACION = 5  # Frames consecutivos para confirmar ca√≠da
INTERVALO_ALERTA = 5  # Segundos entre alertas

# Configuraci√≥n de email (Gmail)
EMAIL_CONFIG = {
    "remitente": "tu_email@gmail.com",  # Cambiar por tu email
    "password": "tu_password_app",      # Contrase√±a de aplicaci√≥n
    "destinatario": "cuidador@email.com", # Email del cuidador
    "smtp_server": "smtp.gmail.com",
    "smtp_port": 587,
    "intervalo_minimo": 60  # Segundos entre emails
}

# Configuraci√≥n de logs
LOG_CONFIG = {
    "archivo_log": "../datos/eventos.log",
    "formato_timestamp": "%Y-%m-%d %H:%M:%S"
}

# Configuraci√≥n de interfaz
INTERFAZ_CONFIG = {
    "titulo_ventana": "Detector de Caidas - Sistema PEF",
    "mostrar_angulo": True,
    "mostrar_contador": True,
    "mostrar_umbral": True,
    "mostrar_estado_email": True
}

# Configuraci√≥n de colores (BGR)
COLORES = {
    "verde": (0, 255, 0),      # Contorno detectado
    "azul": (255, 0, 0),       # Rect√°ngulo de √°ngulo
    "rojo": (0, 0, 255),       # Alerta de ca√≠da
    "amarillo": (0, 255, 255), # Inclinaci√≥n detectada
    "blanco": (255, 255, 255), # Texto normal
    "verde_claro": (0, 255, 0), # Email activo
    "rojo_claro": (0, 0, 255)   # Email inactivo
}

# Configuraci√≥n de filtros
FILTROS = {
    "area_minima_contorno": 5000,  # √Årea m√≠nima para considerar contorno v√°lido
    "filtro_ruido": 300           # √Årea m√≠nima para dibujar contorno
}

# Mensajes del sistema
MENSAJES = {
    "inicio": "üé• Iniciando detector de ca√≠das completo...",
    "alerta": "üö® ALERTA DE CA√çDA DETECTADA",
    "email_enviado": "‚úÖ Email enviado exitosamente",
    "email_error": "‚ùå Error al enviar email",
    "email_no_config": "üìß Notificaciones por email no configuradas",
    "salida": "üëã Detector detenido"
}

# Controles del teclado
CONTROLES = {
    "salir": "q",
    "reiniciar": "r", 
    "aumentar_umbral": ["+", "="],
    "disminuir_umbral": "-",
    "configurar_email": "e"
}

def mostrar_configuracion():
    """Muestra la configuraci√≥n actual del sistema"""
    print("‚öôÔ∏è CONFIGURACI√ìN DEL SISTEMA")
    print("=" * 40)
    print(f"üìê Umbral de √°ngulo: {UMBRAL_ANGULO}¬∞")
    print(f"üìä Contador de confirmaci√≥n: {CONTADOR_CONFIRMACION}")
    print(f"‚è∞ Intervalo entre alertas: {INTERVALO_ALERTA}s")
    print(f"üìß Email remitente: {EMAIL_CONFIG['remitente']}")
    print(f"üì® Email destinatario: {EMAIL_CONFIG['destinatario']}")
    print("=" * 40)

def validar_configuracion():
    """Valida que la configuraci√≥n sea correcta"""
    errores = []
    
    if UMBRAL_ANGULO < 10 or UMBRAL_ANGULO > 90:
        errores.append("Umbral de √°ngulo debe estar entre 10 y 90 grados")
    
    if CONTADOR_CONFIRMACION < 1:
        errores.append("Contador de confirmaci√≥n debe ser mayor a 0")
    
    if INTERVALO_ALERTA < 1:
        errores.append("Intervalo de alerta debe ser mayor a 0")
    
    if EMAIL_CONFIG["remitente"] == "tu_email@gmail.com":
        errores.append("Debes configurar tu email de Gmail")
    
    if EMAIL_CONFIG["password"] == "tu_password_app":
        errores.append("Debes configurar tu contrase√±a de aplicaci√≥n")
    
    if EMAIL_CONFIG["destinatario"] == "cuidador@email.com":
        errores.append("Debes configurar el email del destinatario")
    
    return errores

if __name__ == "__main__":
    mostrar_configuracion()
    errores = validar_configuracion()
    
    if errores:
        print("\n‚ùå Errores en la configuraci√≥n:")
        for error in errores:
            print(f"  - {error}")
        print("\nüí° Edita este archivo para corregir los errores")
    else:
        print("\n‚úÖ Configuraci√≥n v√°lida") 